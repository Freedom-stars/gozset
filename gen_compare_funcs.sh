#! /bin/bash

SIMPLE_TYPES='byte float32 float64 int int16 int32 int64 int8 rune string uint uint16 uint32 uint64 uint8 uintptr'

function ucfirst() {
    perl -ne 'print ucfirst()' <<<"$1"
}

cat <<EOF
// This file is generated by gen_compare_funcs.sh.
// Don't edit manually.

package gozset

import "bytes"

type CompareFunc func(a, b interface{}) int

var (

EOF

# print simple types
for i in $SIMPLE_TYPES; do
    VAR_NAME=$(ucfirst $i)
    cat <<EOF
    ${VAR_NAME} CompareFunc = func (a, b interface{}) int {
        if a.($i) == b.($i) {
            return 0
        }else if a.($i) < b.($i) {
            return -1
        }else{
            return 1
        }
    }

EOF
done

# special case for bytes
cat <<EOF
    // the type []byte.
    Bytes CompareFunc = func (a, b interface{}) int {
        return bytes.Compare(a.([]byte), b.([]byte))
    }
  
EOF

cat <<EOF
)
EOF